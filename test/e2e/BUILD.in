package(default_visibility = ["//visibility:public"])

load(
    "@io_bazel_rules_go//go:def.bzl",
    "go_library",
    "go_test",
)

go_test(
    name = "go_default_test",
    tags = ["e2e"],
)

go_library(name = "go_default_library")

# This is a handwritten rule. Do not delete, it will not be regenerated by
# update-bazel.sh.
genrule(
    name = "gen_e2e.test",
    testonly = 1,
    srcs = [":go_default_test"],
    outs = ["e2e.test"],
    cmd = "srcs=($(SRCS)); cp $$(dirname $${srcs[0]})/go_default_test $@;",
    output_to_bindir = 1,
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [
        ":package-srcs",
        "//test/e2e/apimachinery:all-srcs",
        "//test/e2e/apps:all-srcs",
        "//test/e2e/auth:all-srcs",
        "//test/e2e/autoscaling:all-srcs",
        "//test/e2e/chaosmonkey:all-srcs",
        "//test/e2e/common:all-srcs",
        "//test/e2e/framework:all-srcs",
        "//test/e2e/generated:all-srcs",
        "//test/e2e/instrumentation:all-srcs",
        "//test/e2e/kubectl:all-srcs",
        "//test/e2e/lifecycle:all-srcs",
        "//test/e2e/manifest:all-srcs",
        "//test/e2e/network:all-srcs",
        "//test/e2e/node:all-srcs",
        "//test/e2e/perftype:all-srcs",
        "//test/e2e/scalability:all-srcs",
        "//test/e2e/scheduling:all-srcs",
        "//test/e2e/servicecatalog:all-srcs",
        "//test/e2e/storage:all-srcs",
        "//test/e2e/testing-manifests:all-srcs",
        "//test/e2e/ui:all-srcs",
        "//test/e2e/upgrades:all-srcs",
    ],
    tags = ["automanaged"],
)
